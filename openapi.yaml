openapi: 3.0.0
info:
  title: Park Ranking
  description: Ranking of Warsaw parks - API for fronted app
  version: 0.0.1
servers:
  - url: http://localhost:8080/parks
paths:
  /:
    get:
      summary: get a list of parks ordered by id
      operationId: getAll
      tags:
        - Park
      responses:
        "200":
          description: Ok.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Park'
    post:
      summary: add new park to the ranking
      operationId: add
      tags:
        - Park
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Park'
      responses:
        "200":
          description: Ok.

  /ranking:
    get:
      summary: get a list of parks ordered by the score
      description: "In the ranking the localization is taken into the account. The distance between client's localization and park is calculated, and the score of a park is given by the formula: (10 - rating) * (1.0 - weight) + (10 * distance / max) * weight. This is a weighted arithmetic mean, where 'weight' stands for weight of distance component. In the formula 'rating' is a double between 0 and 10. 'distance' is a distance between client's localization and park. 'max' is the maximum distance, which is in a table. The number 10 is a scalar. The lower score is better."
      operationId: getRanking
      tags:
        - Park
      parameters:
        - $ref: "#/components/parameters/latitudeQueryParam"
        - $ref: "#/components/parameters/longitudeQueryParam"
        - $ref: "#/components/parameters/weightQueryParam"
      responses:
        "200":
          description: Ok.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Park'
  /{id}:
    get:
      summary: get information obout a park with given id
      operationId: getById
      tags:
        - Park
      parameters:
        - $ref: "#/components/parameters/idPathParam"
      responses:
        "200":
          description: Ok.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Park'
    patch:
      summary: update an existing park with specified id
      operationId: partiallyUpdate
      tags:
        - Park
      parameters:
        - $ref: "#/components/parameters/idPathParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Park'
      responses:
        "200":
          description: Ok.
    delete:
      summary: delete an existing park with specified id
      operationId: delete
      tags:
        - Park
      parameters:
        - $ref: "#/components/parameters/idPathParam"
      responses:
        "200":
          description: Ok.
  /detailed:
    post:
      summary: combained saving of a park and its features
      operationId: saveParkDetailed
      tags:
        - ParkDetailed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParkDetailed'
      responses:
        "200":
          description: Ok.
  /detailed/{id}:
    put:
      summary: combained updating of a park and its features
      operationId: updateParkDetailed
      tags:
        - ParkDetailed
      parameters:
        - $ref: "#/components/parameters/idPathParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParkDetailed'
      responses:
        "200":
          description: Ok.
    get:
      summary: get combained park info and its features
      operationId: getParkDetailed
      tags:
        - ParkDetailed
      parameters:
        - $ref: "#/components/parameters/idPathParam"
      responses:
        "200":
          description: Ok.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParkDetailed"
    delete:
      summary: delete an existing park with its features
      operationId: deleteParkDetailed
      tags:
        - ParkDetailed
      parameters:
        - $ref: "#/components/parameters/idPathParam"
      responses:
        "200":
          description: Ok.

components:
  schemas:
    Park:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
          readOnly: true
        name:
          type: string
          example: "Sady Żoliborskie"
        district:
          type: string
          example: "Żoliborz"
        rating:
          type: number
          format: double
          minimum: 0
          maximum: 10
          example: 7.5
        latitude:
          type: number
          format: double
          example: 52.267390
        longitude:
          type: number
          format: double
          example: 20.971988
    FeatureMap:
      type: object
      properties:
        pluses:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
        minuses:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
    Feature:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        description:
          type: string
          example: "plac zabaw"
    ParkDetailed:
      allOf:
        - $ref: "#/components/schemas/Park"
        - type: object
          properties:
            pluses:
              type: array
              items:
                $ref: "#/components/schemas/Feature"
            minuses:
              type: array
              items:
                $ref: "#/components/schemas/Feature"
  parameters:
    latitudeQueryParam:
      name: latitude
      in: query
      required: false
      schema:
        type: number
        format: double
        example: 52.2278197
    longitudeQueryParam:
      name: longitude
      in: query
      required: false
      schema:
        type: number
        format: double
        example: 21.0028638
    weightQueryParam:
      name: weight
      in: query
      required: false
      schema:
        type: number
        format: double
        example: 0
    idPathParam:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int32
        example: 1